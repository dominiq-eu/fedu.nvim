-- Template: https://github.com/rktjmp/lush-template/blob/main/lua/lush_theme/lush_template.lua

local lush = require("lush")

local hsl = lush.hsl
-- local hsluv = lush.hsluv

-- Palette
local white = "#fafafa"
local yellow = "#f1e05a"
-- local red = '#e61f44'
local red = "#ff5e6f"
local lightblue = "#97ccf1"
-- local blue = '#51a0cf'
local blue = "#678cb1"
local violet = "#cf76d1"
local green = "#a7da1e"
local gray = "#5d6971"
local lightgray = "#cfccc6"
local lightbluegray = "#9da9b1"
-- local lightbluegray = '#aab6bf'
local darkgray = "#43414c"
local darkslate = "#293134"
-- local verydarkslate = hsl(darkslate).darken(15)
local verydarkslate = hsl(darkslate).darken(30)
local orange = "#fcb650"

-- Editor Colors
local editor = { fg = lightgray, bg = darkslate }
local search = { bg = hsl(yellow).darken(30), fg = editor.bg }
local error_msg = { fg = red }
local warning_msg = { fg = hsl(orange).darken(20) }
local info_msg = { fg = hsl(lightblue).darken(20) }
local todo_msg = { fg = green }
local files = { fg = white }
local comment = { fg = gray }
local comment_highlight = { fg = lightbluegray }

-- Git
local git_add = { fg = hsl(green).darken(40) }
local git_changed = warning_msg
local git_deleted = error_msg

-- Comments
local comment = { fg = gray }
local comment_highlight = { fg = lightbluegray }

-- Just making these up, but something I probably need in the future:
-- local statusline
-- local tabbar
-- local linenumbers
-- local comments
-- local infoMsg
-- local cursor
--
-- Also it would be nice to have a color table for the ast
-- local variable
-- local function
-- local type
-- local import
-- local char
-- local keyword
-- local operator
-- local delimiter
-- local parameter
-- local float
-- local boolean
-- local string
-- local bracets
--
-- The theme function should probably also be separated in different sections
--  - The editor colors
--  - The syntax highlighting colors
--  - Popular plugin integrations
--

---@diagnostic disable
local theme = lush(function(injected_functions)
	local sym = injected_functions.sym
	return {
		Comment({ fg = comment.fg }),
		TodoComment({ fg = comment.fg }),
		TodoCommentHighlight({ fg = comment.fg, gui = "bold" }),

		CursorLine({ bg = verydarkslate }),
		LineNr({ fg = hsl("#373f42").lighten(20) }),
		LineNrAbove({ LineNr }),
		LineNrBelow({ LineNr }),
		SpecialKey({ fg = lightblue }),
		EndOfBuffer(editor),
		TermCursorNC({ bg = "#43413c" }),
		Directory(files),
		netrwDir({ Directory }),
		ErrorMsg(error_msg),
		NvimInvalidSpacing({ ErrorMsg }),
		WarningMsg(warning_msg),
		netrwCoreDump({ WarningMsg }),
		Search(search),
		CurSearch({ Search }),
		IncSearch({ Search }),
		Substitute({ IncSearch }),
		MoreMsg({ fg = lightblue }),
		ModeMsg({ fg = "#7a7771" }),
		CursorLineNr({ bg = CursorLine.bg, fg = editor.fg }),
		Question({ fg = lightblue }),
		netrwSymLink({ Question }),

		VertSplit({ fg = verydarkslate }),
		WinSeparator({ VertSplit }),
		StatusLine({ bg = "#373f42" }),
		StatusLineNC({ StatusLine }),
		WinBar({ gui = "bold" }),
		WinBarNC({ WinBar }),

		Title({ fg = lightblue }),
		MsgSeparator({ VertSplit }),
		Visual({ bg = "#3d4e57" }),
		NvimSurroundHighlight({ Visual }),
		WildMenu({ bg = verydarkslate }),
		Folded({ bg = "#373f42", fg = "#7a7771" }),
		netrwData({ Folded }),
		netrwGray({ Folded }),
		DiffAdd({ bg = "#324921" }),
		DiffChange({ bg = "#46412a" }),
		netrwLib({ DiffChange }),
		netrwMakefile({ DiffChange }),
		DiffDelete({ bg = "#55313d" }),
		DiffText({ bg = "#655024" }),
		SignColumn({ LineNr }),
		CursorLineSign({ bg = CursorLine.bg, fg = SignColumn.fg }),
		Conceal({ fg = "#43413c" }),
		SpellBad({ fg = "#e61f44" }),
		SpellCap({ fg = "#fcb650" }),
		SpellRare({ fg = "#fcb650" }),
		SpellLocal({ fg = "#fcb650" }),
		Pmenu({ bg = "#1f2527", fg = "#5d6971", guibg = "#1f2527" }),
		PmenuKind({ Pmenu }),
		PmenuExtra({ Pmenu }),
		PmenuSel({ bg = "#1f2527", fg = "#5d6971" }),
		PmenuKindSel({ PmenuSel }),
		PmenuExtraSel({ PmenuSel }),
		PmenuSbar({ bg = "#1f2527" }),
		PmenuThumb({ bg = "#1f2527" }),
		TabLine({ bg = "#293134", fg = "#868b8d" }),
		TabLineSel({ fg = "#293134" }),
		netrwMarkFile({ TabLineSel }),
		TabLineFill({ bg = "#293134", fg = "#868b8d" }),
		CursorColumn({ bg = "#323a3e" }),
		ColorColumn({ bg = "#3d4e57" }),
		MatchBackground({ ColorColumn }),
		Whitespace({ fg = "#43413c" }),
		IndentBlanklineSpaceChar({ Whitespace }),
		NormalFloat({ bg = hsl(editor.bg).darken(15), fg = "#5d6971" }),
		FloatBorder({ bg = hsl(editor.bg).darken(15), fg = "#5d6971" }),

		Cursor({ bg = lightblue, fg = "#293134" }),
		TermCursor({ Cursor }),
		lCursor({ Cursor }),
		CursorIM({ Cursor }),
		FloatTitle({ bg = hsl(editor.bg).darken(15), fg = "#5d6971" }),
		Normal(editor),
		FoldColumn({ Normal }),
		QuickFixLine({ Normal }),
		MsgArea({ Normal }),
		NvimSpacing({ Normal }),
		NotifyBackground({ Normal }),
		NotifyERRORBody({ Normal }),
		NotifyWARNBody({ Normal }),
		NotifyINFOBody({ Normal }),
		NotifyDEBUGBody({ Normal }),
		NotifyTRACEBody({ Normal }),
		FloatShadow({ bg = "#232b2e" }),
		FloatShadowThrough({ bg = "black", blend = 100 }),
		RedrawDebugNormal({ gui = "reverse" }),
		RedrawDebugClear({ bg = "yellow" }),
		RedrawDebugComposed({ bg = "green" }),
		RedrawDebugRecompose({ bg = "red" }),
		Error({ bg = red, fg = "#f8f8f0" }),
		NvimInvalid({ Error }),
		sym("@error")({ Error }),
		Todo({ fg = todo_msg.fg }),
		sym("@text.todo")({ Todo }),

		TodoBgFIX({ TodoCommentHighlight }),
		TodoFgFIX({ TodoComment }),
		TodoSignFIX({ TodoComment }),
		TodoBgNOTE({ TodoCommentHighlight }),
		TodoFgNOTE({ TodoComment }),
		TodoSignNOTE({ TodoComment }),
		TodoBgHACK({ TodoCommentHighlight }),
		TodoFgHACK({ TodoComment }),
		TodoSignHACK({ TodoComment }),
		TodoBgPERF({ TodoCommentHighlight }),
		TodoFgPERF({ TodoComment }),
		TodoSignPERF({ TodoComment }),
		TodoBgTODO({ TodoCommentHighlight }),
		TodoFgTODO({ TodoComment }),
		TodoSignTODO({ TodoComment }),
		TodoBgTEST({ TodoCommentHighlight }),
		TodoFgTEST({ TodoComment }),
		TodoSignTEST({ TodoComment }),
		TodoBgWARN({ TodoCommentHighlight }),
		TodoFgWARN({ TodoComment }),
		TodoSignWARN({ TodoComment }),

		String({ fg = "#fcb650" }),
		sym("@string")({ String }),
		NvimString({ String }),
		TSString({ String }),
		Constant({ fg = "#fafafa", gui = "bold" }),
		Boolean({ fg = lightblue }),
		Float({ fg = green }),
		sym("@constant")({ Constant }),
		sym("@constant.builtin")({ fg = Constant.fg }),
		sym("@constant.macro")({ Constant }),
		sym("@lsp.type.enumMember")({ Constant }),
		sym("@lsp.typemod.variable.constant")({ Constant }),
		TSParameter({ Constant }),
		TSField({ Constant }),
		TSConstant({ Constant }),
		Character({ fg = "#fcb650" }),
		sym("@text.literal")({ Character }),
		sym("@string.escape")({ Character }),
		sym("@string.special")({ Character }),
		sym("@string.special.url.comment")({ TodoComment }),
		sym("@character")({ Character }),
		sym("@character.special")({ Character }),
		sym("@symbol")({ Character }),
		sym("@string.regex")({ Character }),
		Number({ fg = "#fcb650" }),
		sym("@number")({ Number }),
		NvimNumber({ Number }),
		TSFloat({ Number }),
		TSNumber({ Number }),
		netrwQHTopic({ Number }),
		Function({ fg = "#e0e2e4" }),
		Macro({ Function }),
		sym("@function")({ Function }),
		sym("@function.builtin")({ Function }),
		sym("@function.macro")({ Function }),
		sym("@method")({ Function }),
		sym("@constructor")({ fg = "#678cb1" }),
		sym("@include")({ fg = lightblue }),
		sym("@lsp.type.decorator")({ Function }),
		sym("@lsp.type.function")({ Function }),
		sym("@lsp.type.method")({ Function }),
		sym("@tag.attribute")({ Function }),
		TSFunction({ Function }),
		netrwClassify({ Function }),
		netrwHelpCmd({ Function }),
		Identifier({ fg = "#e0e2e4" }),
		sym("@variable")({ Identifier }),
		NvimIdentifier({ Identifier }),
		netrwVersion({ Identifier }),
		Conditional({ fg = lightblue }),
		sym("@conditional")({ Conditional }),
		TSConditional({ Conditional }),
		Statement({ fg = lightblue }),
		netrwHidePat({ Statement }),
		netrwList({ Statement }),
		Repeat({ fg = lightblue }),
		sym("@repeat")({ Repeat }),
		TSRepeat({ Repeat }),
		Label({ fg = lightblue }),
		sym("@label")({ Label }),
		Operator({ fg = "#fafafa" }),
		Delimiter({ fg = "#fafafa" }),
		sym("@operator")({ Operator }),
		NvimAssignment({ Operator }),
		NvimOperator({ Operator }),
		sym("@tag.delimiter")({ Delimiter }),
		sym("@lsp.type.operator")({ Operator }),
		sym("@lsp.type.formatSpecifier")({ Operator }),
		sym("@punctuation.special")({ Operator }),
		-- sym '@punctuation.bracket' { Comment },
		-- sym '@punctuation.bracket' { fg = blue },
		sym("@punctuation.bracket")({ fg = violet }),
		sym("@punctuation.delimiter")({ Operator }),
		TSOperator({ Operator }),
		Keyword({ fg = "#678cb1" }),
		sym("@keyword")({ Keyword }),
		sym("@keyword.jsdoc")({ TodoCommentHighlight }),
		sym("@tag")({ Keyword }),
		TSKeyword({ fg = lightblue }),
		sym("@keyword.typescript")({ TSKeyword }),
		Exception({ fg = lightblue }),
		sym("@exception")({ Exception }),
		PreProc({ fg = "#fafafa" }),
		Include({ PreProc }),
		Define({ PreProc }),
		PreCondit({ PreProc }),
		sym("@define")({ PreProc }),
		sym("@preproc")({ PreProc }),
		netrwExe({ PreProc }),
		Type({ fg = "#aab6bf" }),
		-- Type { fg = '#b6c3cc' },
		-- Type { fg = '#9da9b1' },
		StorageClass({ fg = "#678cb1" }),
		Structure({ Type }),
		Typedef({ Type }),
		sym("@type")({ Type }),
		sym("@namespace")({ fg = "#fcb650" }),
		sym("@lsp.type.enum")({ Type }),
		sym("@lsp.type.namespace")({ Type }),
		sym("@lsp.type.type")({ Type }),
		NvimNumberPrefix({ Type }),
		NvimOptionSigil({ Type }),
		sym("@type.builtin")({ Type }),
		-- sym '@type.builtin' { fg = '#e0e2e4' },
		TSTagDelimiter({ Type }),
		TSType({ Type }),
		TSLabel({ Type }),
		Special({ fg = lightblue }),
		Tag({ Special }),
		SpecialChar({ Special }),
		SpecialComment({ Special }),
		Debug({ Special }),
		NotifyLogTitle({ Special }),
		netrwLink({ Special }),
		netrwTreeBar({ Special }),
		netrwPix({ Special }),
		DiagnosticError({ fg = error_msg.fg }),
		DiagnosticFloatingError({ DiagnosticError }),
		DiagnosticWarn({ fg = warning_msg.fg }),
		DiagnosticFloatingWarn({ DiagnosticWarn }),
		DiagnosticInfo({ fg = info_msg.fg }),
		DiagnosticFloatingInfo({ DiagnosticInfo }),
		DiagnosticHint({ fg = info_msg.fg }),
		DiagnosticFloatingHint({ DiagnosticHint }),
		DiagnosticOk({ fg = "lightgreen" }),
		DiagnosticVirtualTextOk({ DiagnosticOk }),
		DiagnosticFloatingOk({ DiagnosticOk }),
		DiagnosticSignOk({ DiagnosticOk }),
		DiagnosticUnderlineError({ gui = "underline" }),
		DiagnosticUnderlineWarn({ gui = "underline" }),
		DiagnosticUnderlineInfo({ gui = "underline" }),
		DiagnosticUnderlineHint({ gui = "underline" }),
		DiagnosticUnderlineOk({ gui = "underline", sp = "lightgreen" }),
		DiagnosticVirtualTextError({ bg = "#43363b", fg = "#ff5e6f" }),
		DiagnosticVirtualTextWarn({ bg = "#3f3e34", fg = "#e09c31" }),
		DiagnosticVirtualTextInfo({ bg = "#2a4248", fg = "#34bedc" }),
		DiagnosticVirtualTextHint({ bg = "#2f4148", fg = "#5db8de" }),
		DiagnosticSignError({ fg = "#ff5e6f" }),
		DiagnosticSignWarn({ fg = "#e09c31" }),
		DiagnosticSignInfo({ fg = "#34bedc" }),
		DiagnosticSignHint({ fg = "#5db8de" }),
		DiagnosticDeprecated({ gui = "strikethrough", sp = "red" }),
		MiniIndentscopeSymbol({ Comment }),
		NonText({ Comment }),
		DiagnosticUnnecessary({ Comment }),
		sym("@comment")({ Comment }),
		TSComment({ Comment }),
		NotifyLogTime({ Comment }),
		netrwComment({ Comment }),
		sym("@text.reference")({ fg = green }),
		sym("@text.title")({ fg = lightblue }),
		sym("@text.uri")({ gui = "underline", fg = "#00809d" }),
		Underlined({ gui = "underline" }),
		sym("@text.underline")({ gui = "underline" }),
		sym("@parameter")({ fg = "#fafafa" }),
		sym("@parameter.reference")({ sym("@parameter") }),
		sym("@field")({ fg = "#fafafa" }),
		sym("@property")({ sym("@field") }),
		sym("@debug")({ fg = lightblue }),
		sym("@lsp.type.property")({ fg = "#fafafa" }),
		MatchParen({ fg = green }),
		-- MatchParen { fg = violet },
		MatchParenCur({ fg = green }),
		MatchWord({ MatchParenCur }),
		Ignore({ fg = "#43413c" }),
		NvimInternalError({ bg = "red", fg = "red" }),
		NvimFigureBrace({ NvimInternalError }),
		NvimSingleQuotedUnknownEscape({ NvimInternalError }),
		NvimInvalidSingleQuotedUnknownEscape({ NvimInternalError }),
		-- CmpItemMenu({ fg = "#7a7771", bg = "#1f2527" }),
		-- CmpItemKindVariable({ fg = "#cfccc6", bg = "#1f2527" }),
		-- CmpItemKindValue({ fg = green }),
		-- CmpItemKindUnit({ fg = "#678cb1" }),
		-- CmpItemKindTypeParameter({ fg = "#678cb1" }),
		-- CmpItemKindText({ fg = "#fcb650" }),
		-- CmpItemKindStruct({ fg = "#678cb1" }),
		-- CmpItemKindSnippet({ fg = lightblue }),
		-- CmpItemKindReference({ fg = "#678cb1" }),
		-- CmpItemKindProperty({ fg = "#cfccc6" }),
		-- CmpItemKindOperator({ fg = "#fafafa" }),
		-- CmpItemKindModule({ fg = "#fafafa" }),
		-- CmpItemKindMethod({ fg = "#fafafa" }),
		-- CmpItemKindKeyword({ fg = lightblue }),
		-- CmpItemKindInterface({ fg = "#678cb1" }),
		-- CmpItemKindFunction({ fg = "#fafafa" }),
		-- CmpItemKindFolder({ fg = "#fafafa" }),
		-- CmpItemKindFile({ fg = "#fafafa" }),
		-- CmpItemKindField({ fg = "#cfccc6" }),
		-- CmpItemKindEvent({ fg = lightblue }),
		-- CmpItemKindEnumMember({ fg = green }),
		-- CmpItemKindEnum({ fg = green }),
		-- CmpItemKindConstructor({ fg = "#fafafa" }),
		-- CmpItemKindConstant({ fg = green }),
		-- CmpItemKindColor({ fg = lightblue }),
		-- CmpItemKindClass({ fg = "#678cb1" }),
		-- CmpItemKind({ fg = "#678cb1" }),
		-- CmpItemKindEnumMemberDefault({ CmpItemKind }),
		-- CmpItemKindSnippetDefault({ CmpItemKind }),
		-- CmpItemKindReferenceDefault({ CmpItemKind }),
		-- CmpItemKindOperatorDefault({ CmpItemKind }),
		-- CmpItemKindPropertyDefault({ CmpItemKind }),
		-- CmpItemKindEnumDefault({ CmpItemKind }),
		-- CmpItemKindValueDefault({ CmpItemKind }),
		-- CmpItemKindConstructorDefault({ CmpItemKind }),
		-- CmpItemKindConstantDefault({ CmpItemKind }),
		-- CmpItemKindModuleDefault({ CmpItemKind }),
		-- CmpItemKindColorDefault({ CmpItemKind }),
		-- CmpItemKindMethodDefault({ CmpItemKind }),
		-- CmpItemKindStructDefault({ CmpItemKind }),
		-- CmpItemKindKeywordDefault({ CmpItemKind }),
		-- CmpItemKindClassDefault({ CmpItemKind }),
		-- CmpItemKindTypeParameterDefault({ CmpItemKind }),
		-- CmpItemKindInterfaceDefault({ CmpItemKind }),
		-- CmpItemKindVariableDefault({ CmpItemKind }),
		-- CmpItemKindFolderDefault({ CmpItemKind }),
		-- CmpItemKindUnitDefault({ CmpItemKind }),
		-- CmpItemKindFileDefault({ CmpItemKind }),
		-- CmpItemKindFunctionDefault({ CmpItemKind }),
		-- CmpItemKindFieldDefault({ CmpItemKind }),
		-- CmpItemKindTextDefault({ CmpItemKind }),
		-- CmpItemKindEventDefault({ CmpItemKind }),
		-- CmpItemAbbrMatchFuzzy({ fg = "#cfccc6" }),
		-- CmpItemAbbrMatch({ fg = "#cfccc6" }),
		-- CmpItemAbbr({ fg = "#7a7771" }),
		-- CmpDocumentationBorder({ bg = "#3c4447" }),
		IndentBlanklineContextChar({ fg = "#43413c" }),
		sym("@variable.builtin")({ fg = "#fafafa" }),
		sym("@danger")({ fg = "#e61f44" }),
		sym("@warning")({ fg = "#fcb650" }),
		sym("@environment")({ fg = lightblue }),
		sym("@environment.name")({ sym("@environment") }),
		sym("@math")({ fg = lightblue }),
		sym("@text.warning")({ bg = "#543a40", fg = "#ff5e6f" }),
		sym("@text.danger")({ bg = "#4e4633", fg = "#e09c31" }),
		sym("@text.strike")({ gui = "strikethrough" }),
		sym("@text.emphasis")({ gui = "italic" }),
		sym("@text.strong")({ gui = "bold" }),
		sym("@keyword.return")({ fg = lightblue }),
		sym("@keyword.operator")({ fg = lightblue }),
		sym("@keyword.function")({ fg = lightblue }),
		sym("@attribute")({ fg = lightblue }),
		sym("@lsp.typemod.keyword.controlFlow")({ fg = lightblue }),
		sym("@lsp.type.escapeSequence")({ fg = "#7a7771" }),
		StartifyPath({ fg = "#00a8c6" }),
		StartifySlash({ StartifyPath }),
		StartifyNumber({ fg = "#cfccc6" }),
		StartifyBracket({ fg = "#524f4a" }),
		-- TelescopeSelection { bg = '#40494c' },
		TelescopeSelection({ bg = verydarkslate }),
		TelescopeSelectionCaret({ fg = "#323a3e" }),
		TelescopePreviewTitle({ fg = "#7a7771" }),
		TelescopePreviewLine({ CursorLine }),
		TelescopePreviewBorder({ bg = "#323a3e", fg = "#323a3e" }),
		TelescopePreviewNormal({ bg = "#323a3e" }),
		TelescopeResultsBorder({ bg = "#323a3e", fg = "#323a3e" }),
		TelescopeResultsTitle({ bg = "#323a3e", fg = "#323a3e" }),
		TelescopePromptCounter({ fg = "#524f4a" }),
		TelescopePromptNormal({ bg = verydarkslate, fg = lightgray }),
		-- TelescopePromptNormal { bg = '#323a3e' },
		-- TelescopePromptBorder { bg = '#323a3e', fg = '#323a3e' },
		TelescopePromptBorder({ bg = verydarkslate, fg = verydarkslate }),
		TelescopePromptTitle({ bg = "#a3a09b", fg = darkslate }),
		TelescopeMatching({ fg = "#cfccc6" }),
		TelescopeBorder({ fg = "#323a3e" }),
		TelescopeNormal({ bg = "#323a3e", fg = "#7a7771" }),

		-- TelescopeBorder = { fg = Visual.bg, bg = Normal.bg },
		-- TelescopeNormal = { bg = Normal.bg },
		-- TelescopePreviewBorder = { fg = Normal.bg, bg = Normal.bg },
		-- TelescopePreviewNormal = { bg = Normal.bg },
		-- TelescopePreviewTitle = { fg = Normal.bg, bg = String.fg },
		-- TelescopePromptBorder = { fg = verydarkslate, bg = verydarkslate },
		-- TelescopePromptNormal = { fg = Normal.fg, bg = Visual.bg },
		-- TelescopePromptPrefix = { fg = red, bg = Visual.bg },
		-- TelescopePromptTitle = { fg = Normal.bg, bg = Error.fg },
		-- TelescopeResultsBorder = { fg = Normal.bg, bg = Normal.bg },
		-- TelescopeResultsNormal = { bg = Normal.bg },
		-- TelescopeResultsTitle = { fg = Normal.bg, bg = Normal.bg },

		IndentBlanklineChar({ fg = "#3c4447" }),
		NeoTreeIndentMarker({ IndentBlanklineChar }),
		NeoTreeCursorLine({ bg = editor.bg }),
		-- NeoTreeCursorLine { CursorLine },
		-- NeoTreeBufferNumber { fg = violet },
		NeoTreeNormal({ bg = verydarkslate, fg = "#a3a09b" }),
		NeoTreeSignColumn({ NeoTreeNormal }),
		NeoTreeStatusLine({ NeoTreeNormal }),
		NeoTreePopup({ NeoTreeNormal }),
		NeoTreeNormalNC({ NeoTreeNormal }),
		NeoTreeEndOfBuffer({ bg = NeoTreeNormal.bg, fg = NeoTreeNormal.bg }),
		NeoTreeWinSeparator({ bg = NeoTreeNormal.bg, fg = NeoTreeNormal.bg }),
		NeoTreeCursorLineSign({ bg = "#323a3e" }),
		NeoTreeFolderIcon({ fg = "#e0e2e4" }),
		NeoTreeGitRenamed({ fg = "#e09c31" }),
		NeoTreeGitStaged({ fg = "#87c100" }),
		NeoTreeGitModified({ fg = "#e09c31" }),
		NeoTreeGitIgnored({ fg = "#43413c" }),
		NeoTreeGitDeleted({ fg = "#e61f44" }),
		NeoTreeGitConflict({ fg = "#5db8de" }),
		NeoTreeRootName({ fg = "#7a7771", gui = "bolder" }),
		NeoTreeGitUntracked({ fg = "#e09c31" }),
		LspCodeLensSeparator({ fg = "#43413c" }),
		LspCodeLens({ bg = "#323a3e" }),
		LspReferenceText({ fg = green, gui = "bold" }),
		LspReferenceWrite({ LspReferenceText }),
		LspReferenceRead({ LspReferenceText }),
		NvimTreeRootFolder({ fg = "#232b2e" }),
		NvimTreeFolderIcon({ fg = "#fafafa" }),
		NvimTreeEndOfBuffer({ bg = "#232b2e", fg = "#293134" }),
		NvimTreeIndentMarker({ fg = "#fafafa" }),
		NvimTreeWinSeparator({ bg = "#232b2e", fg = "#373f42" }),
		NvimTreeNormal({ bg = "#232b2e", fg = "#a3a09b" }),
		NvimTreeSignColumn({ NvimTreeNormal }),
		NvimTreePopup({ NvimTreeNormal }),
		NvimTreeNormalNC({ NvimTreeNormal }),
		NvimTreeGitStaged({ fg = git_add.fg }),
		NvimTreeGitRenamed({ fg = git_changed.fg }),
		NvimTreeGitNew({ fg = git_add.fg }),
		NvimTreeGitMerge({ fg = info_msg.fg }),
		NvimTreeGitIgnored({ fg = "#43413c" }),
		NvimTreeGitDirty({ fg = git_changed.fg }),
		NvimTreeGitDeleted({ fg = git_deleted.fg }),
		LspSignatureActiveParameter({ bg = "#3c4447" }),
		GitSignsAdd({ fg = git_add.fg }),
		GitSignsDelete({ fg = git_deleted.fg }),
		GitSignsChange({ fg = git_changed.fg }),
		VisualNOS({ bg = "#373f42" }),
		TSCharacter({ fg = "#678cb1" }),
		-- lualine_a_inactive({ bg = "#494742", gui = "bold", fg = "#91999d" }),
		-- lualine_b_inactive({ bg = "#2d3539", fg = "#85837e" }),
		-- lualine_c_inactive({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_a_insert({ bg = "#ffc858", gui = "bold", fg = "#2d3539" }),
		-- lualine_b_insert({ bg = "#2d3539", fg = "#ffc858" }),
		-- lualine_c_insert({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_a_replace({ bg = "#ffc858", gui = "bold", fg = "#2d3539" }),
		-- lualine_b_replace({ bg = "#2d3539", fg = "#ffc858" }),
		-- lualine_c_replace({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_a_visual({ bg = "#a6e0ff", gui = "bold", fg = "#2d3539" }),
		-- lualine_b_visual({ bg = "#2d3539", fg = "#a6e0ff" }),
		-- lualine_c_visual({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_a_terminal({ bg = "#ffffff", gui = "bold", fg = "#2d3539" }),
		-- lualine_b_terminal({ bg = "#2d3539", fg = "#ffffff" }),
		-- lualine_c_terminal({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_a_command({ bg = "#ffffff", gui = "bold", fg = "#2d3539" }),
		-- lualine_b_command({ bg = "#2d3539", fg = "#ffffff" }),
		-- lualine_c_command({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_a_normal({ bg = "#494742", gui = "bold", fg = "#91999d" }),
		-- lualine_b_normal({ bg = "#2d3539", fg = "#85837e" }),
		-- lualine_c_normal({ bg = "#6a6a6a", fg = "#e3e0d9" }),
		-- lualine_c_diagnostics_error_normal({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_error_insert({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_error_visual({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_error_replace({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_error_command({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_error_terminal({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_error_inactive({ bg = "#6a6a6a", fg = "#ff5e6f" }),
		-- lualine_c_diagnostics_warn_normal({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_warn_insert({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_warn_visual({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_warn_replace({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_warn_command({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_warn_terminal({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_warn_inactive({ bg = "#6a6a6a", fg = "#e09c31" }),
		-- lualine_c_diagnostics_info_normal({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_info_insert({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_info_visual({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_info_replace({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_info_command({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_info_terminal({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_info_inactive({ bg = "#6a6a6a", fg = "#34bedc" }),
		-- lualine_c_diagnostics_hint_normal({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_c_diagnostics_hint_insert({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_c_diagnostics_hint_visual({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_c_diagnostics_hint_replace({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_c_diagnostics_hint_command({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_c_diagnostics_hint_terminal({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_c_diagnostics_hint_inactive({ bg = "#6a6a6a", fg = "#5db8de" }),
		-- lualine_x_10_normal({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_10_insert({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_10_visual({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_10_replace({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_10_command({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_10_terminal({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_10_inactive({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_11_normal({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_11_insert({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_11_visual({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_11_replace({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_11_command({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_11_terminal({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_11_inactive({ bg = "#6a6a6a", fg = green }),
		-- lualine_x_13_normal({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_13_insert({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_13_visual({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_13_replace({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_13_command({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_13_terminal({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_13_inactive({ bg = "#6a6a6a", fg = lightblue }),
		-- lualine_x_diff_added_normal({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_added_insert({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_added_visual({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_added_replace({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_added_command({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_added_terminal({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_added_inactive({ bg = "#6a6a6a", fg = "#4c6a37" }),
		-- lualine_x_diff_modified_normal({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_modified_insert({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_modified_visual({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_modified_replace({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_modified_command({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_modified_terminal({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_modified_inactive({ bg = "#6a6a6a", fg = "#ad7834" }),
		-- lualine_x_diff_removed_normal({ bg = "#6a6a6a", fg = "#ab494b" }),
		-- lualine_x_diff_removed_insert({ bg = "#6a6a6a", fg = "#ab494b" }),
		-- lualine_x_diff_removed_visual({ bg = "#6a6a6a", fg = "#ab494b" }),
		-- lualine_x_diff_removed_replace({ bg = "#6a6a6a", fg = "#ab494b" }),
		-- lualine_x_diff_removed_command({ bg = "#6a6a6a", fg = "#ab494b" }),
		-- lualine_x_diff_removed_terminal({ bg = "#6a6a6a", fg = "#ab494b" }),
		-- lualine_x_diff_removed_inactive({ bg = "#6a6a6a", fg = "#ab494b" }),
		MiniAnimateCursor({ gui = "reverse,nocombine" }),
		MiniAnimateNormalFloat({}),
		WhichKeyDesc({}),
		WhichKeyFloat({ bg = hsl(editor.bg).darken(15), fg = "#a3a09b" }),
		WhichKeySeparator({}),
		WhichKeyValue({}),
		WhichKey({}),
		WhichKeyBorder({}),
		WhichKeyGroup({}),
		NoicePopupmenuMatch({}),
		NoiceCmdlineIconFilter({}),
		NoiceCmdlineIcon({}),
		NoiceCmdlinePopupBorderFilter({}),
		NoiceCmdlinePopupBorder({}),
		NoiceCmdlineIconCalculator({}),
		NoiceCmdlinePopupBorderCalculator({}),
		NoiceCmdlineIconIncRename({}),
		NoiceCmdlinePopupBorderIncRename({}),
		NoiceCmdlineIconSearch({}),
		NoiceCmdlinePopupBorderInput({}),
		NoiceCmdlineIconInput({}),
		NoiceCmdlinePopupBorderHelp({}),
		NoiceCmdlineIconHelp({}),
		NoiceCmdlinePopupBorderCmdline({}),
		NoiceCmdlineIconCmdline({}),
		NoiceCmdlinePopupBorderLua({}),
		NoiceCmdlineIconLua({}),
		NoicePopupmenuBorder({}),
		NoicePopupmenu({}),
		NoicePopupBorder({}),
		NoicePopup({}),
		NoiceMini({}),
		NoiceConfirmBorder({}),
		NoiceConfirm({}),
		NoiceCmdlinePopupBorderSearch({}),
		NoiceCmdline({}),
		NoiceCompletionItemKindEnum({}),
		NoiceCompletionItemKindDefault({}),
		NoiceCursor({}),
		NoiceCompletionItemKindVariable({}),
		NoiceCompletionItemKindFile({}),
		NoiceCompletionItemKindField({}),
		NoiceCompletionItemKindUnit({}),
		NoiceCompletionItemKindEnumMember({}),
		NoiceCompletionItemKindText({}),
		NoiceCompletionItemKindFolder({}),
		NoiceCompletionItemKindSnippet({}),
		NoiceCompletionItemKindConstant({}),
		NoiceCompletionItemKindProperty({}),
		NoiceCmdlinePopupTitle({}),
		NoiceCmdlinePopup({}),
		NoiceCmdlinePrompt({}),
		NoiceCompletionItemKindInterface({}),
		NoiceCompletionItemKindConstructor({}),
		NoiceCompletionItemKindMethod({}),
		NoiceCompletionItemKindClass({}),
		NoiceCompletionItemKindFunction({}),
		NoiceCompletionItemKindValue({}),
		NoiceCompletionItemKindColor({}),
		NoiceLspProgressClient({}),
		NoiceLspProgressTitle({}),
		NoiceLspProgressSpinner({}),
		NoiceFormatLevelError({}),
		NoiceFormatLevelWarn({}),
		NoiceFormatLevelInfo({}),
		NoiceFormatLevelOff({}),
		NoiceFormatLevelTrace({}),
		NoiceFormatLevelDebug({}),
		NoiceFormatTitle({}),
		NoiceFormatConfirmDefault({}),
		NoiceFormatConfirm({}),
		NoiceFormatDate({}),
		NoiceFormatKind({}),
		NoiceFormatEvent({}),
		NoiceFormatProgressTodo({}),
		NoiceFormatProgressDone({ bg = "#3c4447", fg = "#cfccc6" }),
		NoiceVirtualText({}),
		NoiceSplitBorder({}),
		NoiceSplit({}),
		NoiceCompletionItemKindKeyword({}),
		NoiceScrollbarThumb({}),
		NoiceCompletionItemKindStruct({}),
		NoiceScrollbar({}),
		NoiceCompletionItemKindModule({}),
		NoicePopupmenuSelected({}),
		NoiceHiddenCursor({ gui = "nocombine", blend = 100 }),
		NotifyERRORBorder({ fg = "#8a1f1f" }),
		NotifyWARNBorder({ fg = "#79491d" }),
		NotifyINFOBorder({ fg = "#4f6752" }),
		NotifyDEBUGBorder({ fg = "#8b8b8b" }),
		NotifyTRACEBorder({ fg = "#4f3552" }),
		NotifyERRORIcon({ fg = "#f70067" }),
		NotifyWARNIcon({ fg = "#f79000" }),
		NotifyINFOIcon({ fg = "#a9ff68" }),
		NotifyDEBUGIcon({ fg = "#8b8b8b" }),
		NotifyTRACEIcon({ fg = "#d484ff" }),
		NotifyERRORTitle({ fg = "#f70067" }),
		NotifyWARNTitle({ fg = "#f79000" }),
		NotifyINFOTitle({ fg = "#a9ff68" }),
		NotifyDEBUGTitle({ fg = "#8b8b8b" }),
		NotifyTRACETitle({ fg = "#d484ff" }),
		NotifyINFOTitle2({ fg = "#2e3936" }),
		NotifyINFOBorder2({ fg = "#2b3335" }),
		NotifyINFOBody2({ bg = "#293134", fg = "#30373a" }),
		NotifyINFOIcon2({ fg = "#2e3936" }),
		TelescopeResultsDiffUntracked({}),
		TelescopeResultsDiffDelete({}),
		TelescopeResultsDiffAdd({}),
		TelescopeResultsDiffChange({}),
		TelescopeResultsSpecialComment({}),
		TelescopeResultsComment({}),
		TelescopeResultsNumber({}),
		TelescopeResultsIdentifier({}),
		TelescopeResultsLineNr({}),
		TelescopeResultsVariable({}),
		TelescopeTitle({}),
		TelescopePreviewSticky({}),
		TelescopePreviewHyphen({}),
		TelescopePreviewExecute({}),
		TelescopePreviewWrite({}),
		TelescopePreviewRead({}),
		TelescopePreviewSocket({}),
		TelescopePreviewLink({}),
		TelescopePreviewBlock({}),
		TelescopePreviewDirectory({}),
		TelescopePreviewCharDev({}),
		TelescopePreviewPipe({}),
		TelescopePreviewMatch({}),
		TelescopePromptPrefix({}),
		TelescopeResultsNormal({}),
		TelescopeMultiIcon({}),
		TelescopeMultiSelection({}),
		TelescopeResultsStruct({}),
		TelescopeResultsOperator({}),
		TelescopeResultsMethod({}),
		TelescopeResultsFunction({}),
		TelescopeResultsField({}),
		TelescopeResultsConstant({}),
		TelescopeResultsClass({}),
		TelescopePreviewMessageFillchar({}),
		TelescopePreviewMessage({}),
		TelescopePreviewDate({}),
		TelescopePreviewGroup({}),
		TelescopePreviewUser({}),
		TelescopePreviewSize({}),
		CmpItemAbbrDefault({ fg = "#7a7771" }),
		CmpItemAbbrDeprecated({}),
		CmpItemAbbrDeprecatedDefault({ fg = "#5d6971" }),
		CmpItemAbbrMatchDefault({ fg = "#7a7771" }),
		CmpItemAbbrMatchFuzzyDefault({ fg = "#7a7771" }),
		CmpItemKindDefault({ fg = lightblue }),
		CmpItemMenuDefault({ fg = "#7a7771" }),
		CmpGhostText({}),
		DevIconPrisma({ fg = white }),
		DevIconYml({ fg = "#6d8086" }),
		DevIconGraphQL({ fg = "#e535ab" }),
		DevIconScss({ fg = "#f55385" }),
		DevIconToml({ fg = "#6d8086" }),
		DevIconCobol({ fg = "#005ca5" }),
		DevIconVue({ fg = "#8dc149" }),
		DevIconVala({ fg = "#7239b3" }),
		DevIconLiquid({ fg = "#95bf47" }),
		DevIconSystemVerilog({ fg = "#019833" }),
		DevIconJson5({ fg = "#cbcb41" }),
		DevIconJsonc({ fg = "#cbcb41" }),
		DevIconXlsx({ fg = "#207245" }),
		DevIconDiff({ fg = "#41535b" }),
		DevIconLicense({ fg = "#d0bf41" }),
		DevIconFsscript({ fg = "#519aba" }),
		DevIconPsd({ fg = "#519aba" }),
		DevIconLhs({ fg = "#a074c4" }),
		DevIconGemfile({ fg = "#701516" }),
		DevIconWebp({ fg = "#a074c4" }),
		DevIconPsb({ fg = "#519aba" }),
		DevIconSolidity({ fg = "#519aba" }),
		DevIconGitCommit({ fg = "#41535b" }),
		DevIconBmp({ fg = "#a074c4" }),
		DevIconMaterial({ fg = "#b83998" }),
		DevIconPpt({ fg = "#cb4a32" }),
		DevIconPyd({ fg = "#ffe291" }),
		DevIconGodotProject({ fg = "#6d8086" }),
		DevIconPng({ fg = "#a074c4" }),
		DevIconDocx({ fg = "#185abd" }),
		DevIconDump({ fg = "#dad8d8" }),
		DevIconGif({ fg = "#a074c4" }),
		DevIconPackedResource({ fg = "#6d8086" }),
		DevIconOpenTypeFont({ fg = "#ececec" }),
		DevIconFs({ fg = "#519aba" }),
		DevIconConfigRu({ fg = "#701516" }),
		DevIconJl({ fg = "#a270ba" }),
		DevIconClojureDart({ fg = "#519aba" }),
		DevIconWebmanifest({ fg = yellow }),
		DevIconLua({ fg = blue }),
		DevIconTor({ fg = "#519aba" }),
		DevIconC({ fg = "#599eff" }),
		DevIconRmd({ fg = "#519aba" }),
		DevIconGDScript({ fg = "#6d8086" }),
		DevIconTextResource({ fg = "#cbcb41" }),
		DevIconTextScene({ fg = "#a074c4" }),
		DevIconMotoko({ fg = "#9772fb" }),
		DevIconRakefile({ fg = "#701516" }),
		DevIconFsx({ fg = "#519aba" }),
		DevIconLuau({ fg = blue }),
		DevIconFsi({ fg = "#519aba" }),
		DevIconMakefile({ fg = "#6d8086" }),
		DevIconFavicon({ fg = "#cbcb41" }),
		DevIconTex({ fg = "#3d6117" }),
		DevIconPackageLockJson({ fg = "#7a0d21" }),
		DevIconFortran({ fg = "#734f96" }),
		DevIconPackageJson({ fg = "#e8274b" }),
		DevIconVimrc({ fg = "#019833" }),
		DevIconGvimrc({ fg = "#019833" }),
		DevIconBazelBuild({ fg = "#89e051" }),
		DevIconDockerfile({ fg = "#458ee6" }),
		DevIconAvif({ fg = "#a074c4" }),
		DevIconFennel({ fg = "#fff3d7" }),
		DevIconCMakeLists({ fg = "#6d8086" }),
		DevIconVerilog({ fg = "#019833" }),
		DevIconSvelteConfig({ fg = "#ff3e00" }),
		DevIconSettingsJson({ fg = "#854cc7" }),
		DevIconXul({ fg = "#e37933" }),
		DevIconNPMIgnore({ fg = "#e8274b" }),
		DevIconErb({ fg = "#701516" }),
		DevIconGitlabCI({ fg = "#e24329" }),
		DevIconHrl({ fg = "#b83998" }),
		DevIconErl({ fg = "#b83998" }),
		DevIconEpp({ fg = "#ffa61a" }),
		DevIconExs({ fg = "#a074c4" }),
		DevIconSql({ fg = "#dad8d8" }),
		DevIconSass({ fg = "#f55385" }),
		DevIconCts({ fg = "#519aba" }),
		DevIconMts({ fg = "#519aba" }),
		DevIconSml({ fg = "#e37933" }),
		DevIconPl({ fg = "#519aba" }),
		DevIconHeex({ fg = "#a074c4" }),
		DevIconTFVars({ fg = "#5f43e9" }),
		DevIconTs({ fg = "#519aba" }),
		DevIconScala({ fg = "#cc3e44" }),
		DevIconConf({ fg = "#6d8086" }),
		DevIconRb({ fg = "#701516" }),
		DevIconVlang({ fg = "#5d87bf" }),
		DevIconPy({ fg = "#ffbc03" }),
		DevIconTypeScriptReactSpec({ fg = "#1354bf" }),
		DevIconTypeScriptReactTest({ fg = "#1354bf" }),
		DevIconPsScriptfile({ fg = "#4273ca" }),
		DevIconSpecTs({ fg = "#519aba" }),
		DevIconPsManifestfile({ fg = "#6975c4" }),
		DevIconTestTs({ fg = "#519aba" }),
		DevIconJavaScriptReactSpec({ fg = "#20c2e3" }),
		DevIconJavaScriptReactTest({ fg = "#20c2e3" }),
		DevIconHtm({ fg = "#e34c26" }),
		DevIconSpecJs({ fg = "#cbcb41" }),
		DevIconAi({ fg = "#cbcb41" }),
		DevIconEdn({ fg = "#519aba" }),
		DevIconTerminal({ fg = "#31b53e" }),
		DevIconDb({ fg = "#dad8d8" }),
		DevIconTcl({ fg = "#1e5cb3" }),
		DevIconEnv({ fg = "#faf743" }),
		DevIconBashrc({ fg = "#89e051" }),
		DevIconLock({ fg = "#bbbbbb" }),
		DevIconHuff({ fg = "#4242c7" }),
		DevIconMixLock({ fg = "#a074c4" }),
		DevIconKsh({ fg = "#4d5a5e" }),
		DevIconSig({ fg = "#e37933" }),
		DevIconEditorConfig({ fg = "#ffffff" }),
		DevIconPp({ fg = "#ffa61a" }),
		DevIconNPMrc({ fg = "#e8274b" }),
		DevIconPdf({ fg = "#b30b00" }),
		DevIconEex({ fg = "#a074c4" }),
		DevIconGitAttributes({ fg = "#41535b" }),
		DevIconTerraform({ fg = "#5f43e9" }),
		DevIconDefault({ fg = "#6d8086" }),
		DevIconPm({ fg = "#519aba" }),
		DevIconDart({ fg = "#03589c" }),
		DevIconZshrc({ fg = "#89e051" }),
		DevIconBabelrc({ fg = "#cbcb41" }),
		DevIconLess({ fg = "#563d7c" }),
		DevIconCsv({ fg = "#89e051" }),
		DevIconConfiguration({ fg = "#ececec" }),
		DevIconSuo({ fg = "#854cc7" }),
		DevIconOPUS({ fg = "#f88a02" }),
		DevIconMint({ fg = "#87c095" }),
		DevIconZsh({ fg = "#89e051" }),
		DevIconCs({ fg = "#596706" }),
		DevIconDropbox({ fg = "#0061fe" }),
		DevIconWebpack({ fg = "#519aba" }),
		DevIconZshenv({ fg = "#89e051" }),
		DevIconXls({ fg = "#207245" }),
		DevIconFsharp({ fg = "#519aba" }),
		DevIconJpg({ fg = "#a074c4" }),
		DevIconCson({ fg = "#cbcb41" }),
		DevIconJpeg({ fg = "#a074c4" }),
		DevIconCp({ fg = "#519aba" }),
		DevIconIco({ fg = "#cbcb41" }),
		DevIconCoffee({ fg = "#cbcb41" }),
		DevIconNodeModules({ fg = "#e8274b" }),
		DevIconSh({ fg = "#4d5a5e" }),
		DevIconVagrantfile({ fg = "#1563ff" }),
		DevIconGitModules({ fg = "#41535b" }),
		DevIconGitConfig({ fg = "#41535b" }),
		DevIconWasm({ fg = "#5c4cdb" }),
		DevIconGulpfile({ fg = "#cc3e44" }),
		DevIconStyl({ fg = "#8dc149" }),
		DevIconGruntfile({ fg = "#e37933" }),
		DevIconRproj({ fg = "#358a5b" }),
		DevIconRlib({ fg = "#dea584" }),
		DevIconSlim({ fg = "#e34c26" }),
		DevIconMustache({ fg = "#e37933" }),
		DevIconMdx({ fg = "#519aba" }),
		DevIconEjs({ fg = "#cbcb41" }),
		DevIconPyo({ fg = "#ffe291" }),
		DevIconSvg({ fg = "#ffb13b" }),
		DevIconR({ fg = "#358a5b" }),
		DevIconDesktopEntry({ fg = "#563d7c" }),
		DevIconCsh({ fg = "#4d5a5e" }),
		DevIconLog({ fg = "#ffffff" }),
		DevIconCxx({ fg = "#519aba" }),
		DevIconMarkdown({ fg = "#519aba" }),
		DevIconCPlusPlus({ fg = "#f34b7d" }),
		DevIconZig({ fg = "#f69a1b" }),
		DevIconDoc({ fg = "#185abd" }),
		DevIconVHDL({ fg = "#019833" }),
		DevIconBrewfile({ fg = "#701516" }),
		DevIconSwift({ fg = "#e37933" }),
		DevIconQuery({ fg = "#90a850" }),
		DevIconMl({ fg = "#e37933" }),
		DevIconMli({ fg = "#e37933" }),
		DevIconTxt({ fg = "#89e051" }),
		DevIconPhp({ fg = "#a074c4" }),
		DevIconEslintrc({ fg = "#4b32c3" }),
		DevIconBzl({ fg = "#89e051" }),
		DevIconJsx({ fg = "#20c2e3" }),
		DevIconCjs({ fg = "#cbcb41" }),
		DevIconClojure({ fg = "#8dc149" }),
		DevIconJs({ fg = "#cbcb41" }),
		DevIconMjs({ fg = yellow }),
		DevIconClojureC({ fg = "#8dc149" }),
		DevIconBash({ fg = "#89e051" }),
		DevIconZshprofile({ fg = "#89e051" }),
		DevIconBashProfile({ fg = "#89e051" }),
		DevIconXcPlayground({ fg = "#e37933" }),
		DevIconImportConfiguration({ fg = "#ececec" }),
		DevIconElm({ fg = "#519aba" }),
		DevIconGo({ fg = "#519aba" }),
		DevIconNim({ fg = "#f3d400" }),
		DevIconVim({ fg = "#019833" }),
		DevIconGitIgnore({ fg = "#41535b" }),
		DevIconEx({ fg = "#a074c4" }),
		DevIconTestJs({ fg = "#cbcb41" }),
		DevIconDrools({ fg = "#ffafaf" }),
		DevIconJava({ fg = "#cc3e44" }),
		DevIconProlog({ fg = "#e4b854" }),
		DevIconPsScriptModulefile({ fg = "#6975c4" }),
		DevIconRss({ fg = "#fb9d3b" }),
		DevIconKotlinScript({ fg = "#7f52ff" }),
		DevIconKotlin({ fg = "#7f52ff" }),
		DevIconBazel({ fg = "#89e051" }),
		DevIconXml({ fg = "#e37933" }),
		DevIconBat({ fg = "#c1f12e" }),
		DevIconBazelWorkspace({ fg = "#89e051" }),
		DevIconRs({ fg = "#dea584" }),
		DevIconHtml({ fg = "#e44d26" }),
		DevIconCrystal({ fg = "#c8c8c8" }),
		DevIconProcfile({ fg = "#a074c4" }),
		DevIconD({ fg = "#427819" }),
		DevIconFish({ fg = "#4d5a5e" }),
		DevIconGitLogo({ fg = "#f14c28" }),
		DevIconReScriptInterface({ fg = "#f55385" }),
		DevIconAwk({ fg = "#4d5a5e" }),
		DevIconHpp({ fg = "#a074c4" }),
		DevIconHxx({ fg = "#a074c4" }),
		DevIconCMake({ fg = "#6d8086" }),
		DevIconCpp({ fg = "#519aba" }),
		DevIconCss({ fg = "#42a5f5" }),
		DevIconHh({ fg = "#a074c4" }),
		DevIconNix({ fg = "#7ebae4" }),
		DevIconHs({ fg = "#a074c4" }),
		DevIconRake({ fg = "#701516" }),
		DevIconScheme({ fg = "#000000" }),
		DevIconLeex({ fg = "#a074c4" }),
		DevIconsbt({ fg = "#cc3e44" }),
		DevIconReScript({ fg = "#cc3e44" }),
		DevIconDsStore({ fg = "#41535b" }),
		DevIconHbs({ fg = "#f0772b" }),
		DevIconTwig({ fg = "#8dc149" }),
		DevIconMd({ fg = "#ffffff" }),
		DevIconOrgMode({ fg = "#77aa99" }),
		DevIconHaml({ fg = "#eaeae1" }),
		DevIconSln({ fg = "#854cc7" }),
		DevIconGemspec({ fg = "#701516" }),
		DevIconH({ fg = "#a074c4" }),
		DevIconBinaryGLTF({ fg = "#ffb13b" }),
		DevIconClojureJS({ fg = "#519aba" }),
		DevIconSvelte({ fg = "#ff3e00" }),
		DevIconTsx({ fg = "#1354bf" }),
		DevIconIni({ fg = "#6d8086" }),
		DevIconPyc({ fg = "#ffe291" }),
		DevIconYaml({ fg = "#6d8086" }),
		DevIconJson({ fg = "#cbcb41" }),
		lualine_c_filetype_DevIconDefault_normal({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_c_filetype_DevIconDefault_insert({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_c_filetype_DevIconDefault_visual({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_c_filetype_DevIconDefault_replace({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_c_filetype_DevIconDefault_command({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_c_filetype_DevIconDefault_terminal({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_c_filetype_DevIconDefault_inactive({ bg = "#6a6a6a", fg = "#6d8086" }),
		lualine_transitional_lualine_a_insert_to_lualine_c_filetype_DevIconDefault_insert({
			bg = "#6a6a6a",
			fg = "#ffc858",
		}),
		lualine_transitional_lualine_b_insert_to_lualine_x_13_insert({ bg = "#6a6a6a", fg = "#2d3539" }),
		lualine_transitional_lualine_a_insert_to_lualine_b_insert({ bg = "#2d3539", fg = "#ffc858" }),
		MiniIndentscopeSymbol({}),
		MiniIndentscopeSymbolOff({}),
		NullLsInfoBorder({}),
		NullLsInfoSources({}),
		NullLsInfoTitle({}),
		NullLsInfoHeader({}),
		LspInfoFiletype({}),
		LspInfoTitle({}),
		LspInfoTip({}),
		LspInfoList({}),
		LspInfoBorder({}),
		IndentBlanklineContextStart({ gui = "underline", sp = lightblue }),
		IndentBlanklineSpaceCharBlankline({ gui = "nocombine", fg = "#5d6971" }),
		Todo({ fg = comment.fg }),
		TodoHighlight({ fg = comment_highlight.fg, gui = "bold" }),
		sym("@text.todo")({ TodoHighlight }),
		sym("@keyword.jsdoc")({ TodoHighlight }),
		TodoBgFIX({ TodoHighlight }),
		TodoFgFIX({ Todo }),
		TodoSignFIX({ Todo }),
		TodoBgNOTE({ TodoHighlight }),
		TodoFgNOTE({ Todo }),
		TodoSignNOTE({ Todo }),
		TodoBgHACK({ TodoHighlight }),
		TodoFgHACK({ Todo }),
		TodoSignHACK({ Todo }),
		TodoBgPERF({ TodoHighlight }),
		TodoFgPERF({ Todo }),
		TodoSignPERF({ Todo }),
		TodoBgTODO({ TodoHighlight }),
		TodoFgTODO({ Todo }),
		TodoSignTODO({ Todo }),
		TodoBgTEST({ TodoHighlight }),
		TodoFgTEST({ Todo }),
		TodoSignTEST({ Todo }),
		TodoBgWARN({ TodoHighlight }),
		TodoFgWARN({ Todo }),
		TodoSignWARN({ Todo }),
		IlluminatedWordText({ LspReferenceText }),
		IlluminatedWordRead({ IlluminatedWordText }),
		IlluminatedWordWrite({ IlluminatedWordText }),
		lualine_c_filetype_DevIconTs_normal({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_c_filetype_DevIconTs_insert({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_c_filetype_DevIconTs_visual({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_c_filetype_DevIconTs_replace({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_c_filetype_DevIconTs_command({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_c_filetype_DevIconTs_terminal({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_c_filetype_DevIconTs_inactive({ bg = "#6a6a6a", fg = "#519aba" }),
		lualine_transitional_lualine_a_normal_to_lualine_b_normal({ bg = "#2d3539", fg = "#494742" }),
		lualine_transitional_lualine_b_normal_to_lualine_c_filetype_DevIconTs_normal({ bg = "#6a6a6a", fg = "#2d3539" }),
		lualine_transitional_lualine_b_normal_to_lualine_x_13_normal({ bg = "#6a6a6a", fg = "#2d3539" }),
		GitSignsTopdelete({}),
		GitSignsUntracked({}),
		GitSignsChangedelete({}),
		GitSignsAddNr({}),
		GitSignsChangeNr({}),
		GitSignsDeleteNr({}),
		GitSignsChangedeleteNr({}),
		GitSignsTopdeleteNr({}),
		GitSignsUntrackedNr({}),
		GitSignsAddLn({}),
		GitSignsChangeLn({}),
		GitSignsChangedeleteLn({}),
		GitSignsUntrackedLn({}),
		GitSignsStagedAdd({ bg = "#232b2e", fg = "#26351b" }),
		GitSignsStagedChange({ bg = "#232b2e", fg = "#563c1a" }),
		GitSignsStagedDelete({ bg = "#232b2e", fg = "#552425" }),
		GitSignsStagedChangedelete({ bg = "#232b2e", fg = "#563c1a" }),
		GitSignsStagedTopdelete({ bg = "#232b2e", fg = "#552425" }),
		GitSignsStagedAddNr({ bg = "#232b2e", fg = "#26351b" }),
		GitSignsStagedChangeNr({ bg = "#232b2e", fg = "#563c1a" }),
		GitSignsStagedDeleteNr({ bg = "#232b2e", fg = "#552425" }),
		GitSignsStagedChangedeleteNr({ bg = "#232b2e", fg = "#563c1a" }),
		GitSignsStagedTopdeleteNr({ bg = "#232b2e", fg = "#552425" }),
		GitSignsStagedAddLn({ bg = "#324921" }),
		GitSignsStagedChangeLn({ bg = "#46412a" }),
		GitSignsStagedChangedeleteLn({ bg = "#46412a" }),
		GitSignsAddPreview({}),
		GitSignsDeletePreview({}),
		GitSignsCurrentLineBlame({}),
		GitSignsAddInline({}),
		GitSignsDeleteInline({}),
		GitSignsChangeInline({}),
		GitSignsAddLnInline({}),
		GitSignsChangeLnInline({}),
		GitSignsDeleteLnInline({}),
		GitSignsDeleteVirtLn({}),
		GitSignsDeleteVirtLnInLine({}),
		GitSignsVirtLnum({}),
		lualine_transitional_lualine_b_normal_to_lualine_x_diff_modified_normal({ bg = "#6a6a6a", fg = "#2d3539" }),
		lualine_transitional_lualine_a_command_to_lualine_b_command({ bg = "#2d3539", fg = "#ffffff" }),
		lualine_transitional_lualine_b_command_to_lualine_c_filetype_DevIconTs_command({
			bg = "#6a6a6a",
			fg = "#2d3539",
		}),
		lualine_transitional_lualine_b_command_to_lualine_x_diff_modified_command({ bg = "#6a6a6a", fg = "#2d3539" }),
		NotifyINFOTitle84({ fg = "#2e3936" }),
		NotifyINFOBorder84({ fg = "#2b3335" }),
		NotifyINFOBody84({ bg = "#293134", fg = "#30373a" }),
		NotifyINFOIcon84({ fg = "#2e3936" }),
		lualine_transitional_lualine_a_normal_to_lualine_c_filetype_DevIconDefault_normal({
			bg = "#6a6a6a",
			fg = "#494742",
		}),
		lualine_transitional_lualine_a_command_to_lualine_c_filetype_DevIconDefault_command({
			bg = "#6a6a6a",
			fg = "#ffffff",
		}),
		lualine_transitional_lualine_b_command_to_lualine_x_13_command({ bg = "#6a6a6a", fg = "#2d3539" }),
		lualine_c_filetype_DevIconLua_normal({ bg = "#6a6a6a", fg = blue }),
		lualine_c_filetype_DevIconLua_insert({ bg = "#6a6a6a", fg = blue }),
		lualine_c_filetype_DevIconLua_visual({ bg = "#6a6a6a", fg = blue }),
		lualine_c_filetype_DevIconLua_replace({ bg = "#6a6a6a", fg = blue }),
		lualine_c_filetype_DevIconLua_command({ bg = "#6a6a6a", fg = blue }),
		lualine_c_filetype_DevIconLua_terminal({ bg = "#6a6a6a", fg = blue }),
		lualine_c_filetype_DevIconLua_inactive({ bg = "#6a6a6a", fg = blue }),
		lualine_transitional_lualine_a_normal_to_lualine_c_filetype_DevIconLua_normal({
			bg = "#6a6a6a",
			fg = "#494742",
		}),
		lualine_transitional_lualine_a_normal_to_lualine_c_diagnostics_warn_normal({ bg = "#6a6a6a", fg = "#494742" }),
		NotifyINFOTitle330({ fg = "#2e3936" }),
		NotifyINFOBorder330({ fg = "#2b3335" }),
		NotifyINFOBody330({ bg = "#293134", fg = "#30373a" }),
		NotifyINFOIcon330({ fg = "#2e3936" }),
		lualine_transitional_lualine_a_command_to_lualine_c_filetype_DevIconLua_command({
			bg = "#6a6a6a",
			fg = "#ffffff",
		}),
		NotifyINFOTitle383({ fg = "#2e3936" }),
		NotifyINFOBorder383({ fg = "#2b3335" }),
		NotifyINFOBody383({ bg = "#293134", fg = "#30373a" }),
		NotifyINFOIcon383({ fg = "#2e3936" }),
		NotifyERRORTitle392({ fg = "#312f36" }),
		NotifyERRORBorder392({ fg = "#2d3033" }),
		NotifyERRORBody392({ bg = "#293134", fg = "#30373a" }),
		NotifyERRORIcon392({ fg = "#312f36" }),
		NoiceAttr81({ fg = "#e61f44" }),
		FlashBackdrop({}),
		FlashPromptIcon({}),
		FlashPrompt({}),
		FlashMatch({}),
		FlashCurrent({}),
		FlashLabel({}),
		lualine_transitional_lualine_a_insert_to_lualine_c_diagnostics_warn_insert({ bg = "#6a6a6a", fg = "#ffc858" }),
		lualine_transitional_lualine_a_normal_to_lualine_c_diagnostics_error_normal({ bg = "#6a6a6a", fg = "#494742" }),
		RainbowDelimiterYellow({ fg = yellow }),
		RainbowDelimiterViolet({ fg = violet }),
		RainbowDelimiterBlue({ fg = blue }),
		RainbowDelimiterGreen({ fg = green }),
	}
end)
---@diagnostic enable

return theme
